from config import db_manager, config


def initialize_test_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±–µ–∏—Ö –±–∞–∑–∞—Ö"""

    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    cleanup_queries = [
        "DELETE FROM Conflist",
        "DELETE FROM EmplHistory",
        "DELETE FROM Employee",
        "DELETE FROM Positions"
    ]

    for db in [config.db_filial1, config.db_filial2]:
        for query in cleanup_queries:
            try:
                db_manager.execute_query(db, query)
            except Exception as e:
                print(f"Warning during cleanup: {e}")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
    positions = [
        (1, '–ú–µ–Ω–µ–¥–∂–µ—Ä', None, 1),
        (2, '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', None, 1),
        (3, '–ê–Ω–∞–ª–∏—Ç–∏–∫', None, 2),
        (4, '–î–∏–∑–∞–π–Ω–µ—Ä', None, 2)
    ]

    for db in [config.db_filial1, config.db_filial2]:
        for pos in positions:
            query = "INSERT INTO Positions (PosCode, PosName, ParentPos, Filial) VALUES (%s, %s, %s, %s)"
            db_manager.execute_query(db, query, pos)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    employees_f1 = [
        (1001, '–ò–≤–∞–Ω', '–ò–≤–∞–Ω–æ–≤', '–ò–≤–∞–Ω–æ–≤–∏—á', '1990-01-01', '1234567890', 1, 1),
        (1002, '–ü–µ—Ç—Ä', '–ü–µ—Ç—Ä–æ–≤', '–ü–µ—Ç—Ä–æ–≤–∏—á', '1991-02-02', '1111111111', 2, 1)
    ]

    employees_f2 = [
        (2001, '–ú–∞—Ä–∏—è', '–°–∏–¥–æ—Ä–æ–≤–∞', '–ò–≤–∞–Ω–æ–≤–Ω–∞', '1992-03-03', '2222222222', 3, 2),
        (2002, '–ê–Ω–Ω–∞', '–°–º–∏—Ä–Ω–æ–≤–∞', '–ü–µ—Ç—Ä–æ–≤–Ω–∞', '1993-04-04', '3333333333', 4, 2)
    ]

    for emp in employees_f1:
        query = """
        INSERT INTO Employee (EmplCode, Name, Surname, Patronymic, Birthday, Passport, PosCode, Filial)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
        """
        db_manager.execute_query(config.db_filial1, query, emp)

    for emp in employees_f2:
        query = """
        INSERT INTO Employee (EmplCode, Name, Surname, Patronymic, Birthday, Passport, PosCode, Filial)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
        """
        db_manager.execute_query(config.db_filial2, query, emp)

    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ–±–µ–∏—Ö –±–∞–∑–∞—Ö")


def check_database_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö ===")

    for db_name in [config.db_filial1, config.db_filial2]:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            conn = db_manager.get_connection(db_name)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            tables = ['Employee', 'Positions', 'EmplHistory', 'Conflist']
            for table in tables:
                query = f"SELECT COUNT(*) FROM {table}"
                count = db_manager.execute_query(db_name, query, fetch=True)[0][0]
                print(f"üìä {db_name}.{table}: {count} –∑–∞–ø–∏—Å–µ–π")

            conn.close()
            print(f"‚úÖ –ë–∞–∑–∞ {db_name} –≤ –ø–æ—Ä—è–¥–∫–µ")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {db_name}: {e}")


if __name__ == "__main__":
    initialize_test_data()
    check_database_health()